{"version":3,"file":"FastAnimation.stories.e4f2f5b2.js","sources":["../../src/stress-tests/FastAnimation.tsx"],"sourcesContent":["import Konva from \"konva\";\nimport { IFrame } from \"konva/lib/types\";\nimport { useCallback, useEffect, useMemo, useRef } from \"react\";\nimport { Layer, Rect, Stage } from \"react-konva\";\nimport { useKonvaAnimation } from \"../animation/useKonvaAnimation\";\nimport { DraggableLayer } from \"../components/DraggableLayer\";\nimport { DraggableStage } from \"../components/DraggableStage/DraggableStage\";\nimport { FrameCounter } from \"../components/FrameCounter\";\n\nconst rand = (min: number, max: number) => Math.random() * max - min + min;\n\nfunction mapCreate<T>(n: number, factory: () => T): T[] {\n  const items: T[] = [];\n\n  for (let i = 0; i < n; i++) {\n    items.push(factory());\n  }\n\n  return items;\n}\n\nconst getRandomItem = () => ({\n  x: rand(0, 500),\n  y: rand(0, 500),\n  fill: \"red\",\n  width: 50,\n  height: 50,\n  offsetX: 25,\n  offsetY: 25,\n});\n\nconst getInitialItems = (count: number) => mapCreate(count, getRandomItem);\n\nexport type FastAnimationProps = {\n  count: number;\n};\n\nexport function FastAnimation(props: FastAnimationProps) {\n  const { count } = props;\n\n  const items = useMemo(() => {\n    return getInitialItems(count);\n  }, [count]);\n\n  const itemsRef = useRef<Array<Konva.Rect | null>>([]);\n\n  useEffect(() => {\n    itemsRef.current = itemsRef.current.slice(0, count);\n  }, [count]);\n\n  const animate = useCallback((frame: IFrame) => {\n    const elements = itemsRef.current as Konva.Rect[];\n\n    if (!elements) {\n      console.log(\"!elements\");\n      return;\n    }\n\n    Konva.autoDrawEnabled = false;\n\n    for (let i = 0; i < elements.length; i++) {\n      const rect = elements[i];\n\n      if (!rect) continue;\n\n      rect.rotation(frame.time / (1 / (1.0 * 0.1)));\n\n      if (i === elements.length - 1) {\n        rect.getLayer()?.draw();\n      }\n    }\n\n    Konva.autoDrawEnabled = true;\n  }, []);\n\n  useKonvaAnimation(animate);\n\n  return (\n    <>\n      <Stage width={500} height={100} bgFill=\"gray\">\n        <Layer>\n          <FrameCounter width={500} height={100} />\n        </Layer>\n      </Stage>\n      <DraggableStage width={500} height={500} bgFill=\"gray\">\n        <DraggableLayer>\n          {items.map((item, index) => (\n            <Rect\n              ref={(el) => {\n                itemsRef.current[index] = el;\n              }}\n              {...item}\n              key={index}\n              stroke=\"black\"\n              draggable\n            />\n          ))}\n        </DraggableLayer>\n        <Layer>\n          <FrameCounter width={500} height={100} />\n        </Layer>\n      </DraggableStage>\n    </>\n  );\n}\n"],"names":["items","count","useMemo","useRef","useEffect","itemsRef","useCallback","console","Konva","rect","useKonvaAnimation","_jsxs","_Fragment","_jsx","_createElement","el","item","index"],"mappings":"wTASA,KAAA,GAAA,CAAA,EAAA,IAAA,KAAA,SAAA,EAAA,EAAA,EAEA,WAAA,EAAA,EAAA,CACE,KAAA,GAAA,CAAA,EAEA,OAAA,GAAA,EAAA,EAAA,EAAA,IACEA,EAAAA,KAAAA,EAAAA,CAAAA,EAGF,MAAA,EACD,CAED,KAAA,GAAA,IAAA,EAA6B,EAAA,EAAA,EAAA,GAAA,EACpB,EAAA,EAAA,EAAA,GAAA,EACA,KAAA,MACD,MAAA,GACC,OAAA,GACC,QAAA,GACC,QAAA,EANkB,GAU7B,EAAA,AAAA,GAAA,EAAA,EAAA,CAAA,EAMO,WAAA,EAAA,CACL,KAAA,CAAM,SAAEC,EAER,EAAAC,EAAAA,QAAAA,QAAA,IACE,EAAA,CAAA,EAAsB,CAAA,CAAA,CAAA,EAGxB,EAAAC,iBAAA,CAAA,CAAA,EAEAC,EAAAA,QAAAA,UAAAA,IAAAA,CACEC,EAAAA,QAAAA,EAAAA,QAAAA,MAAAA,EAAAA,CAAAA,CAAmB,EAAA,CAAA,CAAA,CAAA,EAGrB,KAAA,GAAAC,sBAAA,AAAA,GAAA,OACE,KAAA,GAAA,EAAA,QAEA,GAAA,CAAA,EAAA,CACEC,QAAAA,IAAAA,WAAAA,EACA,MAAA,CAGFC,EAAAA,gBAAAA,GAEA,OAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CACE,KAAA,GAAA,EAAA,GAEA,AAAA,CAAA,GAEAC,GAAAA,SAAAA,EAAAA,KAAAA,GAAAA,GAAAA,IAAAA,EAEA,IAAA,EAAA,OAAA,GACEA,MAAAA,aAAAA,QAAAA,QACD,CAGHD,EAAAA,gBAAAA,EAAwB,EAAA,CAAA,CAAA,EAG1BE,SAAAA,CAAAA,EAEAC,EAAAC,EAAA,CACE,SAAA,CAAAC,EAAA,EAAA,CACE,MAAA,IAAc,OAAA,IAAa,OAAA,OAAY,SAAAA,EAAA,EAAA,CACrC,SAAAA,EAAA,EAAA,CACE,MAAA,IAAqB,OAAA,GAAa,CAAA,CAAlC,CAAA,CADF,CAAA,EAAAF,EAAA,EAAA,CAIF,MAAA,IAAuB,OAAA,IAAa,OAAA,OAAY,SAAA,CAAAE,EAAA,EAAA,CAC9C,SAAA,EAAA,IAAA,CAAA,EAAA,IAAAC,EAAA,QAAA,cAAA,EAAA,CAEI,IAAA,AAAA,GAAA,CAEIT,EAAAA,QAAAA,GAAAA,CAA0BU,EAC3B,GAAA,EACGC,IAAAA,EACCC,OAAAA,QACE,UAAA,EACE,CAAA,CAAA,CARZ,CAAA,EAAAJ,EAAA,EAAA,CAYH,SAAAA,EAAA,EAAA,CACE,MAAA,IAAqB,OAAA,GAAa,CAAA,CAAlC,CAAA,CAAA,CAfJ,CAAA,CAAA,CANF,CAAA,CA0BH;;;;;;;;;;;;;;;;;;;;;;;;"}