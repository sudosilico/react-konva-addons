{"version":3,"file":"DraggableStage.ce84a927.js","sources":["../../src/components/DraggableStage/StageContext.tsx","../../src/components/DraggableLayer.tsx","../../src/components/DraggableStage/getDragStageProps.ts","../../src/components/DraggableStage/getInputContainerProps.ts","../../src/components/DraggableStage/useStageScrollListener.ts","../../src/components/DraggableStage/DraggableStage.tsx"],"sourcesContent":["import { RefObject, createContext, useContext } from \"react\";\nimport { StageContextState } from \"./DraggableStage\";\n\nexport type DraggableStageContextValue = {\n  stateRef?: RefObject<StageContextState>;\n};\n\nexport const AddonsStageContext = createContext<DraggableStageContextValue>({});\n\nexport function useStageContext() {\n  const value = useContext(AddonsStageContext);\n\n  if (!value.stateRef) {\n    return undefined;\n  }\n\n  return value.stateRef;\n}\n\nexport function useStageState() {\n  const ref = useStageContext();\n\n  if (!ref) {\n    return;\n  }\n\n  return ref.current;\n}\n","import { KonvaEventObject } from \"konva/lib/Node\";\nimport { Group, Layer } from \"react-konva\";\nimport { useStageContext } from \"./DraggableStage/StageContext\";\n\n/**\n * This component allows the DraggableStage to properly handle drag events from objects within the group.\n */\nexport const DraggableGroup = (props: React.ComponentProps<typeof Group>) => {\n  const stageContext = useStageContext();\n\n  const groupOnDragStart = (e: KonvaEventObject<DragEvent>) => {\n    const stage = stageContext?.current?.refs?.stageRef.current;\n    if (!stage) return;\n\n    const shift = e.evt.getModifierState(\"Shift\");\n    const { buttons } = e.evt;\n\n    if ((buttons === 1 && shift) || buttons === 4) {\n      e.target.stopDrag();\n      e.currentTarget.stopDrag();\n      stage.startDrag();\n    } else {\n      if (props.onDragStart) {\n        props.onDragStart(e);\n      }\n    }\n  };\n\n  return (\n    <Group {...props} onDragStart={groupOnDragStart}>\n      {props.children}\n    </Group>\n  );\n};\n\n/**\n * This component allows the DraggableStage to properly handle drag events from objects within the layer.\n */\nexport const DraggableLayer = (props: React.ComponentProps<typeof Layer>) => {\n  return (\n    <Layer {...props}>\n      <DraggableGroup>{props.children}</DraggableGroup>\n    </Layer>\n  );\n};\n","import { KonvaEventObject } from \"konva/lib/Node\";\nimport { DraggableStageRefs } from \"./DraggableStage\";\n\n// eslint-disable-next-line react-hooks/rules-of-hooks\n\nexport function getStageBackgroundProps({\n  stageContextRef: contextStateRef,\n  stageRef,\n  bgRef,\n}: DraggableStageRefs) {\n  return {\n    draggable: true,\n    onDragStart(e: KonvaEventObject<DragEvent>) {\n      const context = contextStateRef.current;\n      const stage = stageRef.current;\n      const background = bgRef.current;\n\n      if (!context || !stage || !background) return;\n\n      background.stopDrag();\n      stage.startDrag();\n\n      const viewOffset = context.viewOffset;\n\n      stage.position({ x: viewOffset.x, y: viewOffset.y });\n      background.position({\n        x: -(viewOffset.x / stage.scaleX()),\n        y: -(viewOffset.y / stage.scaleX()),\n      });\n    },\n  };\n}\n\nexport function getDragStageProps({\n  stageContextRef: contextStateRef,\n  stageRef,\n  bgRef,\n}: DraggableStageRefs) {\n  //\n  return {\n    onDragStart(e: KonvaEventObject<DragEvent>) {\n      const context = contextStateRef.current;\n      const stage = stageRef.current;\n\n      if (!context || !stage) return;\n    },\n    onDragMove(e: KonvaEventObject<DragEvent>) {\n      if (e.target != e.currentTarget) {\n        return;\n      }\n\n      // return if any refs are missing\n      const contextState = contextStateRef.current;\n      const stage = stageRef.current;\n      const background = bgRef.current;\n\n      if (!contextState || !stage || !background) return;\n\n      const translation = { x: e.evt.movementX, y: e.evt.movementY };\n\n      // get translation multiplier based on stage scale\n      const translationMultiplier = 1.0;\n      const viewOffset = contextState.viewOffset;\n\n      viewOffset.x += translation.x * translationMultiplier;\n      viewOffset.y += translation.y * translationMultiplier;\n\n      stage.position({ x: viewOffset.x, y: viewOffset.y });\n      background.position({\n        x: -(viewOffset.x / stage.scaleX()),\n        y: -(viewOffset.y / stage.scaleX()),\n      });\n\n      contextState.viewOffset = viewOffset;\n    },\n    onDragEnd(e: KonvaEventObject<DragEvent>) {\n      const contextState = contextStateRef.current;\n      const stage = stageRef.current;\n      const background = bgRef.current;\n\n      if (!contextState || !stage || !background) return;\n\n      const { viewOffset } = contextState;\n\n      stage.position({ x: viewOffset.x, y: viewOffset.y });\n      background.position({\n        x: -(viewOffset.x / stage.scaleX()),\n        y: -(viewOffset.y / stage.scaleX()),\n      });\n    },\n  };\n}\n","import { DraggableStageRefs } from \"./DraggableStage\";\n\nexport function getInputContainerProps(props: DraggableStageRefs) {\n  return {\n    onKeyDown(evt: React.KeyboardEvent<HTMLDivElement>) {\n      //\n    },\n    onKeyUp(evt: React.KeyboardEvent<HTMLDivElement>) {\n      //\n    },\n  };\n}\n","import { useCallback, useEffect } from \"react\";\nimport { DraggableStageRefs } from \"./DraggableStage\";\n\nexport function useStageScrollListener(refs: DraggableStageRefs) {\n  const onWheel = useCallback(\n    (e: WheelEvent) => {\n      e.preventDefault();\n\n      const stageContext = refs.stageContextRef.current;\n      const stage = refs.stageRef.current;\n      const background = refs.bgRef.current;\n\n      if (!stageContext || !stage || !background) return;\n\n      if (e.ctrlKey) {\n        // ctrlKey means zoom\n        let inDelta = e.deltaY;\n\n        if (Math.abs(inDelta) === 100) {\n          inDelta *= 0.1;\n        }\n\n        const scaleDelta = Math.exp(-inDelta / 100);\n\n        // update stage scale\n        const oldScale = stage.scale().x;\n\n        // get mouse pos\n        const pointer = stage.getPointerPosition();\n\n        if (!pointer) return;\n\n        const mousePointTo = {\n          x: (pointer.x - stage.x()) / oldScale,\n          y: (pointer.y - stage.y()) / oldScale,\n        };\n\n        const newScale = oldScale * scaleDelta;\n\n        stage.scaleX(newScale);\n        stage.scaleY(newScale);\n        background.scaleX(1.0 / newScale);\n        background.scaleY(1.0 / newScale);\n\n        const newPos = {\n          x: pointer.x - mousePointTo.x * newScale,\n          y: pointer.y - mousePointTo.y * newScale,\n        };\n\n        stageContext.viewOffset = newPos;\n        const { viewOffset } = stageContext;\n\n        stage.position(viewOffset);\n        background.position({\n          x: -(viewOffset.x / stage.scaleX()),\n          y: -(viewOffset.y / stage.scaleX()),\n        });\n      } else {\n        // no ctrlKey means pan\n        const translation = { x: e.deltaX * -1, y: e.deltaY * -1 };\n\n        // get translation multiplier based on stage scale\n        const translationMultiplier = 1.0;\n\n        const { viewOffset } = stageContext;\n\n        viewOffset.x += translation.x * translationMultiplier;\n        viewOffset.y += translation.y * translationMultiplier;\n\n        stage.position(viewOffset);\n        background.position({\n          x: -(viewOffset.x / stage.scaleX()),\n          y: -(viewOffset.y / stage.scaleX()),\n        });\n\n        stageContext.viewOffset = viewOffset;\n      }\n    },\n    [refs.bgRef, refs.stageContextRef, refs.stageRef],\n  );\n\n  useEffect(() => {\n    // { passive: false } option is required so we can preventDefault\n    document.addEventListener(\"wheel\", onWheel, { passive: false });\n\n    return () => {\n      document.removeEventListener(\"wheel\", onWheel);\n    };\n  }, [onWheel]);\n}\n","import Konva from \"konva\";\nimport { RefObject, useRef } from \"react\";\nimport { Group, Layer, Rect, Stage, StageProps } from \"react-konva\";\nimport { getStageBackgroundProps, getDragStageProps } from \"./getDragStageProps\";\nimport { AddonsStageContext, useStageState } from \"./StageContext\";\nimport { getInputContainerProps } from \"./getInputContainerProps\";\nimport { useStageScrollListener } from \"./useStageScrollListener\";\n\nexport type StageContextState = {\n  viewOffset: { x: number; y: number };\n  refs?: DraggableStageRefs;\n};\n\nconst initialStageState: StageContextState = {\n  viewOffset: { x: 0, y: 0 },\n};\n\nexport type StageContextRef = React.MutableRefObject<StageContextState>;\n\nexport type DraggableStageRefs = {\n  stageContextRef: StageContextRef;\n  stageRef: RefObject<Konva.Stage>;\n  bgRef: RefObject<Konva.Rect>;\n};\n\nexport type DraggableStageProps = StageProps & {\n  bgFill?: string;\n  overrideTabIndex?: number;\n};\n\ntype FixedGroupProps = {\n  children?: React.ReactNode;\n};\n\nexport function FixedGroup(props: FixedGroupProps) {\n  const stageState = useStageState();\n\n  return <Group>{props.children}</Group>;\n}\n\nexport function DraggableStage(props: DraggableStageProps) {\n  // inputs\n  const { width, height, bgFill, overrideTabIndex } = props;\n  const tabIndex = typeof overrideTabIndex === \"number\" ? overrideTabIndex : 1;\n\n  // refs\n  const contextStateRef = useRef<StageContextState>(initialStageState) as StageContextRef;\n  const stageRef = useRef<Konva.Stage>(null);\n  const bgRef = useRef<Konva.Rect>(null);\n\n  const refs: DraggableStageRefs = {\n    stageContextRef: contextStateRef,\n    stageRef,\n    bgRef,\n  };\n\n  contextStateRef.current.refs = refs;\n\n  // props\n  const stageProps = getDragStageProps(refs);\n  const inputContainerProps = getInputContainerProps(refs);\n  const bgProps = getStageBackgroundProps(refs);\n\n  useStageScrollListener(refs);\n\n  return (\n    <div\n      tabIndex={tabIndex}\n      style={{\n        backgroundColor: bgFill,\n        width: width,\n        height: height,\n      }}\n      {...inputContainerProps}\n    >\n      <Stage ref={stageRef} {...props} {...stageProps}>\n        <AddonsStageContext.Provider value={{ stateRef: contextStateRef }}>\n          <Layer>\n            <Rect ref={bgRef} width={width} height={height} {...bgProps} />\n          </Layer>\n          {props.children}\n        </AddonsStageContext.Provider>\n      </Stage>\n    </div>\n  );\n}\n"],"names":["AddonsStageContext","createContext","value","useContext","stateRef","ref","useStageContext","current","_jsx","props","buttons","e","stage","groupOnDragStart","children","useCallback","useEffect","width","height","bgFill","overrideTabIndex","useRef","contextStateRef","stageRef","bgRef","useStageScrollListener","inputContainerProps","stageProps","bgProps"],"mappings":"8JAOaA,KAAAA,GAAqBC,EAAAA,QAAAA,cAA0C,CAAA,CAA7B,EAEb,YAAA,CAC1BC,KAAAA,GAAQC,qBAAWH,CAAD,EAEpB,GAAA,EAACE,EAAME,SAIX,MAAOF,GAAME,QACd,CAE+B,YAAA,CAC9B,KAAMC,GAAMC,IAEZ,GAAI,EAACD,EAIL,MAAOA,GAAIE,OACZ,CCpBM,KAAA,GAAA,AAAA,GAAA,CACL,KAAA,GAAA,IAoBA,MAAAC,GAAA,EAAA,CACE,GAAA,EAAWC,YAnBb,AAAA,GAAA,SACE,KAAA,GAAA,uBAAA,UAAA,cAAA,OAAA,cAAA,SAAA,QACA,GAAA,CAAA,EAAY,OAEZ,KAAA,GAAA,EAAA,IAAA,iBAAA,OAAA,EACA,CAAM,WAAEC,EAAAA,IAER,AAAA,IAAA,GAAA,GAAA,IAAA,EACEC,GAAAA,OAAAA,WACAA,EAAAA,cAAAA,WACAC,EAAAA,UAAAA,GAEA,EAAA,aACEH,EAAAA,YAAAA,CAAAA,CAEH,EAI8BI,SAAAA,EAAAA,QACtBC,CAAAA,CAGZ,EAKM,EAAA,AAAA,GACLN,EAAA,EAAA,CACE,GAAA,EAAWC,SAAAA,EAAAA,EAAAA,CACT,SAAA,EAAA,QAAuBK,CAAAA,CAAvB,CAAA,w3BCpCkC,WAAA,CACtC,gBAAiB,EACjB,WACA,SACqB,CACd,MAAA,CACL,UAAW,GACX,YAAY,EAAgC,CAC1C,KAAM,GAAU,EAAgB,QAC1B,EAAQ,EAAS,QACjB,EAAa,EAAM,QAEzB,GAAI,CAAC,GAAW,CAAC,GAAS,CAAC,EAAY,OAEvC,EAAW,SAAS,EACpB,EAAM,UAAU,EAEhB,KAAM,GAAa,EAAQ,WAErB,EAAA,SAAS,CAAE,EAAG,EAAW,EAAG,EAAG,EAAW,EAAG,EACnD,EAAW,SAAS,CAClB,EAAG,CAAa,GAAA,EAAI,EAAM,OAAO,GACjC,EAAG,CAAa,GAAA,EAAI,EAAM,OAAO,EAAA,CAClC,CACH,CAAA,CAEJ,CAEkC,WAAA,CAChC,gBAAiB,EACjB,WACA,SACqB,CAEd,MAAA,CACL,YAAY,EAAgC,CAC1C,KAAM,GAAU,EAAgB,QAC1B,EAAQ,EAAS,OAGzB,EACA,WAAW,EAAgC,CACrC,GAAA,EAAE,QAAU,EAAE,cAChB,OAIF,KAAM,GAAe,EAAgB,QAC/B,EAAQ,EAAS,QACjB,EAAa,EAAM,QAEzB,GAAI,CAAC,GAAgB,CAAC,GAAS,CAAC,EAAY,OAEtC,KAAA,GAAc,CAAE,EAAG,EAAE,IAAI,UAAW,EAAG,EAAE,IAAI,WAG7C,EAAwB,EACxB,EAAa,EAAa,WAErB,EAAA,GAAK,EAAY,EAAI,EACrB,EAAA,GAAK,EAAY,EAAI,EAE1B,EAAA,SAAS,CAAE,EAAG,EAAW,EAAG,EAAG,EAAW,EAAG,EACnD,EAAW,SAAS,CAClB,EAAG,CAAa,GAAA,EAAI,EAAM,OAAO,GACjC,EAAG,CAAa,GAAA,EAAI,EAAM,OAAO,EAAA,CAClC,EAED,EAAa,WAAa,CAC5B,EACA,UAAU,EAAgC,CACxC,KAAM,GAAe,EAAgB,QAC/B,EAAQ,EAAS,QACjB,EAAa,EAAM,QAEzB,GAAI,CAAC,GAAgB,CAAC,GAAS,CAAC,EAAY,OAE5C,KAAM,CAAE,cAAe,EAEjB,EAAA,SAAS,CAAE,EAAG,EAAW,EAAG,EAAG,EAAW,EAAG,EACnD,EAAW,SAAS,CAClB,EAAG,CAAa,GAAA,EAAI,EAAM,OAAO,GACjC,EAAG,CAAa,GAAA,EAAI,EAAM,OAAO,EAAA,CAClC,CACH,CAAA,CAEJ,CCzFO,WAAgC,EAA2B,CACzD,MAAA,CACL,UAAU,EAA0C,CAEpD,EACA,QAAQ,EAA0C,CAElD,CAAA,CAEJ,CCRO,WAAgC,EAA0B,CACzD,KAAA,GAAUC,sBACd,AAAC,GAAkB,CACjB,EAAE,eAAe,EAEX,KAAA,GAAe,EAAK,gBAAgB,QACpC,EAAQ,EAAK,SAAS,QACtB,EAAa,EAAK,MAAM,QAE9B,GAAI,GAAC,GAAgB,CAAC,GAAS,CAAC,GAEhC,GAAI,EAAE,QAAS,CAEb,GAAI,GAAU,EAAE,OAEhB,AAAI,KAAK,IAAI,CAAO,IAAM,KACb,IAAA,IAGb,KAAM,GAAa,KAAK,IAAI,CAAC,EAAU,GAAG,EAGpC,EAAW,EAAM,MAAA,EAAQ,EAGzB,EAAU,EAAM,qBAEtB,GAAI,CAAC,EAAS,OAEd,KAAM,GAAe,CACnB,EAAI,GAAQ,EAAI,EAAM,EAAO,GAAA,EAC7B,EAAI,GAAQ,EAAI,EAAM,EAAO,GAAA,CAAA,EAGzB,EAAW,EAAW,EAE5B,EAAM,OAAO,CAAQ,EACrB,EAAM,OAAO,CAAQ,EACV,EAAA,OAAO,EAAM,CAAQ,EACrB,EAAA,OAAO,EAAM,CAAQ,EAEhC,KAAM,GAAS,CACb,EAAG,EAAQ,EAAI,EAAa,EAAI,EAChC,EAAG,EAAQ,EAAI,EAAa,EAAI,CAAA,EAGlC,EAAa,WAAa,EAC1B,KAAM,CAAE,cAAe,EAEvB,EAAM,SAAS,CAAU,EACzB,EAAW,SAAS,CAClB,EAAG,CAAa,GAAA,EAAI,EAAM,OAAO,GACjC,EAAG,CAAa,GAAA,EAAI,EAAM,OAAO,EAAA,CAClC,CAAA,KACI,CAEC,KAAA,GAAc,CAAE,EAAG,EAAE,OAAS,GAAI,EAAG,EAAE,OAAS,EAAG,EAGnD,EAAwB,EAExB,CAAE,cAAe,EAEZ,EAAA,GAAK,EAAY,EAAI,EACrB,EAAA,GAAK,EAAY,EAAI,EAEhC,EAAM,SAAS,CAAU,EACzB,EAAW,SAAS,CAClB,EAAG,CAAa,GAAA,EAAI,EAAM,OAAO,GACjC,EAAG,CAAa,GAAA,EAAI,EAAM,OAAO,EAAA,CAClC,EAED,EAAa,WAAa,CAC5B,CAAA,EAEF,CAAC,EAAK,MAAO,EAAK,gBAAiB,EAAK,QAAQ,CAClD,EAEAC,EAAAA,QAAAA,UAAU,IAER,UAAS,iBAAiB,QAAS,EAAS,CAAE,QAAS,GAAO,EAEvD,IAAM,CACF,SAAA,oBAAoB,QAAS,CAAO,CAAA,GAE9C,CAAC,CAAO,CAAC,CACd,CC5EA,KAAA,GAAA,CAA6C,WAAA,CAC/B,EAAA,EAAK,EAAA,CAAM,CADoB,EAqBtC,WAAA,EAAA,CACL,SAAA,EAEAR,EAAA,EAAA,CAAO,SAAA,EAAA,QAAcM,CAAAA,CACtB,CAEM,WAAA,EAAA,CAEL,KAAA,CAAM,QAAEG,SAAOC,SAAQC,oBAAQC,EAC/B,EAAA,MAAA,IAAA,SAAA,EAAA,EAGA,EAAAC,iBAAA,CAAA,EACA,EAAAA,iBAAA,IAAA,EACA,EAAAA,iBAAA,IAAA,EAEA,EAAA,CAAiC,gBAAA,EACdC,WACjBC,OACAC,EAGFF,EAAAA,QAAAA,KAAAA,EAGA,KAAA,GAAA,EAAA,CAAA,EACA,EAAA,EAAA,EACA,EAAA,EAAA,CAAA,EAEAG,SAAAA,CAAAA,EAEAjB,EAAA,MAAA,CACE,WACE,MAAA,CACO,gBAAA,EACYW,QACjBF,QACAC,EAHK,GAAA,EAKHQ,SAAAA,EAAAA,EAAAA,CAEJ,IAAA,EAAYH,GAAAA,EAAcd,GAAAA,EAAWkB,SAAAA,EAAAA,EAAAA,SAAAA,CACnC,MAAA,CAAoC,SAAA,CAAYL,EAAZ,SAAA,CAAAd,EAAA,EAAA,CAClC,SAAAA,EAAA,EAAA,CACE,IAAA,EAAWgB,QAAO,SAAc,GAAA,CAAoBI,CAAAA,CAApD,CAAA,EAAA,EAAA,QAAA,CAFJ,CAAA,CAAA,CAAA,CADF,CAAA,CAUL"}